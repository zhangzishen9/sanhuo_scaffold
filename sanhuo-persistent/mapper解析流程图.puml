@startuml

:添加mapper和entity的映射关系;

:解析mapper所映射的entity;

note left
Class EntityParsingAssistant
====
# 解析Entity对应的表名

# 解析Entity类的字段
## 获取字段名
## 获取字段的JAVA类型
## 获取字段的Field类
## 获取字段对应的数据库列名
## 获取字段的JDBC类型
## 获取字段的JAVA <-> JDBC 类型转换器
## 获取字段对应的数据库列长度
## 获取字段是否为主键
## 获取字段是否能为空

#构建并返回TableProperty类
end note

:解析mapper里面的方法;


note right
Class MapperAnnotationBuilder
====
# 获取方法入参

# 构建方法的参数映射
## 获取入参的名称
## 获取入参的JAVA类型
## 获取入参的JDBC类型
## 获取入参的JAVA <-> JDBC类型转换器

# 解析SqlSource
## 判断是静态还是动态SQL
### [静态SQL] -> StaticSqlSource
#### [静态SQL] 直接解析SQL的#{}获取解析后的SQL和参数映射
### [动态SQL] -> DynamicSqlSource

# 构建方法的出参映射 -> ResultMappingHandler
## [Results]
## [mapper映射的实体]
## [其他实体]
## [Integer,Boolean,Long,String等基础类型]
## [Page分页]

# 获取方法的id(签名)
# 构建并返回MappedStatement类

end note


@enduml